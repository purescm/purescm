;; DO NOT EDIT THIS FILE!!
;; This inlined chez-srfi library code is autogenerated using command:
;; $ ./install.chezscheme.sps ../vendor
;; Source origin: https://github.com/arcfide/chez-srfi
;; Please refer to project site for full credits and original code.
;;;;;; File header: %3a129/titlecase.sls
;;;;;; File header: %3a129/titlemaps.scm
;;;; Alists for titlecase functions
;;;;;; File header: %3a129/titlecase-impl.scm
;;;; Implementation of SRFI 129 titlecase functions
(library (srfi :129 titlecase)
  (export char-title-case? char-titlecase string-titlecase)
  (import
    (except
      (rnrs)
      char-titlecase
      char-title-case?
      string-titlecase)
    (srfi private include))
  (begin
    (define titlecase-chars
      '((453 453) (456 456) (459 459) (498 498) (8072 8072)
        (8073 8073) (8074 8074) (8075 8075) (8076 8076) (8077 8077)
        (8078 8078) (8079 8079) (8088 8088) (8089 8089) (8090 8090)
        (8091 8091) (8092 8092) (8093 8093) (8094 8094) (8095 8095)
        (8104 8104) (8105 8105) (8106 8106) (8107 8107) (8108 8108)
        (8109 8109) (8110 8110) (8111 8111) (8124 8124) (8140 8140)
        (8188 8188)))
    (define title-single-map
      (append
        titlecase-chars
        '((452 453) (454 453) (455 456) (457 456) (458 459)
           (460 459) (497 498) (499 498))))
    (define title-multiple-map
      (append
        title-single-map
        '((223 83 115) (64256 70 102) (64257 70 105) (64258 70 108)
          (64259 70 102 105) (64260 70 102 108) (64261 83 116)
          (64262 83 116) (1415 1333 1410) (64275 1348 1398)
          (64276 1348 1381) (64277 1348 1387) (64278 1358 1398)
          (64279 1348 1389) (329 700 78) (912 921 776 769)
          (944 933 776 769) (496 74 780) (7830 72 817) (7831 84 776)
          (7832 87 778) (7833 89 778) (7834 65 702) (8016 933 787)
          (8018 933 787 768) (8020 933 787 769) (8022 933 787 834)
          (8118 913 834) (8134 919 834) (8146 921 776 768)
          (8147 921 776 769) (8150 921 834) (8151 921 776 834)
          (8162 933 776 768) (8163 933 776 769) (8164 929 787)
          (8166 933 834) (8167 933 776 834) (8182 937 834)
          (8114 8122 837) (8116 902 837) (8130 8138 837)
          (8132 905 837) (8178 8186 837) (8180 911 837)
          (8119 913 834 837) (8135 919 834 837) (8183 937 834 837))))
    (define lower-multiple-map '((304 105 775))))
  (begin
    (define (char-title-case? ch)
      (let* ([codepoint (char->integer ch)]
             [result (assq codepoint titlecase-chars)])
        (if result #t #f)))
    (define (char-titlecase ch)
      (let* ([codepoint (char->integer ch)]
             [result (assq codepoint title-single-map)])
        (if result (integer->char (cadr result)) (char-upcase ch))))
    (define (char-caseless? ch)
      (not (or (char-lower-case? ch)
               (char-upper-case? ch)
               (char-title-case? ch))))
    (define (reverse-push new old)
      (if (null? new)
          old
          (reverse-push (cdr new) (cons (car new) old))))
    (define (string-titlecase str)
      (let loop ([n 0] [result '()])
        (if (= n (string-length str))
            (apply string (map integer->char (reverse result)))
            (let* ([ch (string-ref str n)]
                   [codepoint (char->integer ch)])
              (if (or (= n 0) (char-caseless? (string-ref str (- n 1))))
                  (let ([multi-title (assq codepoint title-multiple-map)])
                    (if multi-title
                        (loop
                          (+ n 1)
                          (reverse-push (cdr multi-title) result))
                        (loop
                          (+ n 1)
                          (reverse-push
                            (list (char->integer (char-upcase ch)))
                            result))))
                  (let ([multi-downcase (assq
                                          codepoint
                                          lower-multiple-map)])
                    (if multi-downcase
                        (loop
                          (+ n 1)
                          (reverse-push (cdr multi-downcase) result))
                        (loop
                          (+ n 1)
                          (reverse-push
                            (list (char->integer (char-downcase ch)))
                            result)))))))))))
